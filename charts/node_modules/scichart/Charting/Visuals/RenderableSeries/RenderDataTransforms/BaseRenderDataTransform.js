"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseRenderDataTransform = void 0;
var DeletableEntity_1 = require("../../../../Core/DeletableEntity");
var Deleter_1 = require("../../../../Core/Deleter");
var Guard_1 = require("../../../../Core/Guard");
var NumberRange_1 = require("../../../../Core/NumberRange");
var RenderPassData_1 = require("../../../Services/RenderPassData");
var BaseRenderDataTransform = /** @class */ (function (_super) {
    __extends(BaseRenderDataTransform, _super);
    function BaseRenderDataTransform(parentSeries, wasmContext, drawingProviders) {
        var _this = _super.call(this) || this;
        _this.requiresTransform = true;
        _this.parentSeries = parentSeries;
        _this.wasmContext = wasmContext;
        _this.parentSeries.dataSeries;
        _this.pointSeries = _this.createPointSeries();
        _this.drawingProviders = drawingProviders !== null && drawingProviders !== void 0 ? drawingProviders : [];
        return _this;
    }
    BaseRenderDataTransform.prototype.runTransform = function (renderPassData) {
        if (this.requiresTransform) {
            Guard_1.Guard.notNull(renderPassData, "renderPassData");
            Guard_1.Guard.notNull(renderPassData.pointSeries, "renderPassData.pointSeries");
            var ps = this.runTransformInternal(renderPassData);
            if (ps === this.pointSeries) {
                this.requiresTransform = false;
            }
            return this.makeRenderPassData(renderPassData, ps);
        }
        return this.makeRenderPassData(renderPassData, this.pointSeries);
    };
    BaseRenderDataTransform.prototype.onDataChange = function (args) {
        this.requiresTransform = true;
    };
    BaseRenderDataTransform.prototype.delete = function () {
        this.pointSeries = (0, Deleter_1.deleteSafe)(this.pointSeries);
        this.wasmContext = undefined;
    };
    BaseRenderDataTransform.prototype.makeRenderPassData = function (originalRPD, pointSeries) {
        var indexRange = new NumberRange_1.NumberRange(0, pointSeries.xValues.size() - 1);
        pointSeries.xRange = originalRPD.pointSeries.xRange;
        pointSeries.fifoStartIndex = originalRPD.pointSeries.fifoStartIndex;
        return new RenderPassData_1.RenderPassData(indexRange, originalRPD.getxCoordinateCalculator, originalRPD.getyCoordinateCalculator, originalRPD.isVerticalChart, pointSeries, originalRPD.resamplingHash);
    };
    return BaseRenderDataTransform;
}(DeletableEntity_1.DeletableEntity));
exports.BaseRenderDataTransform = BaseRenderDataTransform;
